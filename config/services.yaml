# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'lt'
    max_user_vehicle_count: 3
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # Form Type Extensions
    App\Form\Extension\ProfileFormTypeExtension:
        tags:
            - { name: form.type_extension, extended_type: FOS\UserBundle\Form\Type\ProfileFormType }

    App\Form\Extension\RegistrationFormTypeExtension:
        tags:
            - { name: form.type_extension, extended_type: FOS\UserBundle\Form\Type\RegistrationFormType }
    # End of Form Type Extensions

    # Forms
    App\Form\VehicleType:
        arguments: ['@security.token_storage', '%max_user_vehicle_count%']
        tags: [form.type]

    App\Form\AddServiceType:
        arguments: ['@router']
        tags: [form.type]

    App\Form\VisitType:
        arguments: ['@security.token_storage', '@router']
        tags: [form.type]
    # End of Forms

    # Sonata admin bundle configuration
    admin.user:
        class: App\Admin\UserAdmin
        arguments: [~, App\Entity\User, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: User }
        public: true

    admin.service:
        class: App\Admin\ServiceAdmin
        arguments: [~, App\Entity\Service, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Service }
        public: true

    admin.service_type:
        class: App\Admin\ServiceTypeAdmin
        arguments: [~, App\Entity\ServiceType, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Service Type }
        public: true

    admin.config:
        class: App\Admin\ConfigAdmin
        arguments: [~, App\Entity\Config, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Configuration }
        public: true
    # End of Sonata admin bundle configuration

    # Event subscriber configuration
    app_user.registration:
        class: App\EventSubscriber\RegistrationSubscriber
        arguments: ['@router']
        tags:
            - { name: kernel.event_subscriber }

    app_visit.visit:
        class: App\EventSubscriber\VisitSubscriber
        tags:
            - { name: doctrine.event_subscriber, connection: default }
    # End of Event subscriber configuration

    # Custom twig function configuration
    app.twig_visit:
        class: App\Twig\VisitRuntime
        public: false
        tags:
            - { name: twig.runtime }
    # End of Custom twig function configuration
